{"version":3,"file":"static/js/186.c2ba8e2d.chunk.js","mappings":"kPA+EA,UAxEgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IAAgBJ,GAF1B,OAEXK,EAFW,OAGjBR,EAAWQ,GAHM,gDAKjBC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAA,uBAA4B,KAAMC,QAAlC,wBANiB,yBAQjBV,GAAa,GARI,4EAAH,qDAYlBI,GACD,GAAE,CAACH,KAGF,iCACE,oCACCF,GACC,SAAC,IAAD,IACIF,EAAQc,QACZ,wBACGd,EAAQe,KACP,YAMO,IALLX,EAKI,EALJA,GACAY,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACkBC,EACd,EADJC,eAAkBD,YAOlB,OALKA,IACHA,EACE,sEAIF,2BACE,4BACE,gBACEE,IACEF,EAAYG,SAAS,SACjBH,EAAYI,MAAM,GAClBC,EAAAA,EAAeL,EAErBM,IAAG,UAAKT,EAAL,gBAEL,4BACE,wBAAKA,KACL,0BAAO,IAAIU,KAAKR,GAAYS,0BAGhC,0BAAOV,MAfAb,EAkBZ,OAIL,wCAEF,SAAC,KAAD,MAGL,C,8LC3EDwB,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAMnC,GAAN,uFACVwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,oBAAyC,CAC1D2B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDASfK,EAAY,mCAAG,WAAMpC,GAAN,uFACPwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,4BAAiD,CAClE2B,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKM,MANS,2CAAH,sDASZjC,EAAe,mCAAG,WAAMJ,GAAN,uFACVwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,4BAAiD,CAClE2B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,sDC/CrB,IAAMZ,EAAe,iC","sources":["components/Reviews/Reviews.jsx","services/apiService.jsx","services/constants.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { getMovieReviews } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error(error);\n        toast.error(`Oh boy, it's ${error.message}! Please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {isLoading ? (\n        <Loader />\n      ) : !!reviews.length ? (\n        <ul>\n          {reviews.map(\n            ({\n              id,\n              author,\n              content,\n              created_at,\n              author_details: { avatar_path },\n            }) => {\n              if (!avatar_path) {\n                avatar_path =\n                  '/https://msf-theeltal.de/wp-content/uploads/2018/04/no-avatar.jpg';\n              }\n\n              return (\n                <li key={id}>\n                  <div>\n                    <img\n                      src={\n                        avatar_path.includes('https')\n                          ? avatar_path.slice(1)\n                          : BASE_IMG_URL + avatar_path\n                      }\n                      alt={`${author}'s avatar`}\n                    />\n                    <div>\n                      <h3>{author}</h3>\n                      <span>{new Date(created_at).toLocaleString()}</span>\n                    </div>\n                  </div>\n                  <span>{content}</span>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      ) : (\n        <p>No reviews!</p>\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '3bff356dabf2463bd3474fa7d5296b16';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","useEffect","fetchReviews","getMovieReviews","movieReviews","console","error","toast","message","length","map","author","content","created_at","avatar_path","author_details","src","includes","slice","BASE_IMG_URL","alt","Date","toLocaleString","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}