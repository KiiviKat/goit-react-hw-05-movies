{"version":3,"file":"static/js/544.055392bf.chunk.js","mappings":"gPAGaA,EAAOC,EAAAA,GAAAA,GAAH,0HAOJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+JAYRG,EAASH,EAAAA,GAAAA,IAAH,mHAONI,EAAOJ,EAAAA,GAAAA,EAAH,6EAKJK,EAASL,EAAAA,GAAAA,KAAH,qI,SC5BNM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,aAAzC,OACV,yBACE,UAACd,EAAD,CAAUe,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMV,GAA9C,WACE,SAACL,EAAD,CACEgB,IAAKN,EAAcO,EAAAA,EAAeP,EAAcQ,EAChDC,IAAKV,KAEP,UAACR,EAAD,WACGQ,EADH,KACYG,EAAaQ,MAAM,EAAG,GADlC,KAEE,SAAClB,EAAD,UAASS,EAAeA,EAAaU,QAAQ,GAAK,eAR/Cb,EADC,KAgBjB,C,oICKD,UA1Ba,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEWC,EAAAA,EAAAA,MAFX,OAEZC,EAFY,OAGlBJ,EAAUI,GAHQ,gDAKlBC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,QAArB,2BANkB,yDAAH,qDAUnBN,GACD,GAAE,KAGD,iCACE,SAAC,IAAD,8BACA,SAAC,IAAD,CAAYrB,OAAQA,KACpB,SAAC,KAAD,MAGL,C,mMC5BD4B,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVP,EAAiB,mCAAG,oGACZM,EAAAA,EAAAA,IAAA,uBAAkC,CACnDE,OAAQ,CACNC,QAASF,EACTG,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXT,EAAAA,EAAAA,IAAA,8CACsBS,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASF,EACTG,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAMlC,GAAN,uFACVwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,oBAAyC,CAC1D0B,OAAQ,CACNC,QAASF,KAHgB,cACvBI,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDASfK,EAAY,mCAAG,WAAMnC,GAAN,uFACPwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,4BAAiD,CAClE0B,OAAQ,CACNC,QAASF,KAHa,cACpBI,EADoB,yBAMnBA,EAAKC,KAAKM,MANS,2CAAH,sDASZC,EAAe,mCAAG,WAAMrC,GAAN,uFACVwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,4BAAiD,CAClE0B,OAAQ,CACNC,QAASF,KAHgB,cACvBI,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,uDC/CrB,IAAMtB,EAAe,iC","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/apiService.jsx","services/constants.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 12px;\n  margin-bottom: 16px;\n`;\n\nexport const ListLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: #fc0373;\n  }\n`;\n\nexport const Poster = styled.img`\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 4px;\n  height: 441px;\n`;\n\nexport const Info = styled.p`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Rating = styled.span`\n  background-color: #fc0373;\n  color: white;\n  height: 18px;\n  padding: 3px 6px;\n  border-radius: 10px;\n`;\n","import { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../img/placeholder.jpg';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ListLink, Poster, Info, Rating } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path, vote_average, release_date }) => (\n        <li key={id}>\n          <ListLink to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={poster_path ? BASE_IMG_URL + poster_path : placeholder}\n              alt={title}\n            />\n            <Info>\n              {title} ({release_date.slice(0, 4)})\n              <Rating>{vote_average ? vote_average.toFixed(1) : 'N/A'}</Rating>\n            </Info>\n          </ListLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from 'services/apiService';\nimport { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Heading } from 'components/App.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        const trendingMovies = await getTrendingMovies();\n        setMovies(trendingMovies);\n      } catch (error) {\n        console.error(error);\n        toast.error(`${error.message}! Please try again! :(`);\n      }\n    };\n\n    fetchTrending();\n  }, []);\n\n  return (\n    <>\n      <Heading>Trending today</Heading>\n      <MoviesList movies={movies} />\n      <Toaster />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '3bff356dabf2463bd3474fa7d5296b16';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["List","styled","ListLink","NavLink","Poster","Info","Rating","MoviesList","movies","location","useLocation","map","id","title","poster_path","vote_average","release_date","to","state","from","src","BASE_IMG_URL","placeholder","alt","slice","toFixed","useState","setMovies","useEffect","fetchTrending","getTrendingMovies","trendingMovies","console","error","toast","message","axios","API_KEY","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}