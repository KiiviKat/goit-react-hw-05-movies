{"version":3,"file":"static/js/247.b64e463a.chunk.js","mappings":"2PAwDA,UAhDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAEUC,EAAAA,EAAAA,IAAaJ,GAFvB,OAERK,EAFQ,OAGdR,EAAQQ,GAHM,gDAKdC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,QAArB,2BANc,yBAQdV,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,CAACH,KAGF,iCACE,iCACCF,GACC,SAAC,IAAD,KAEA,wBACGF,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAA9B,OACR,2BACE,gBACEC,IAAKH,EAAeI,EAAAA,EAAeJ,EAAeK,EAClDC,IAAKL,KAEP,yBACGA,EACAC,IAAa,kCAAUA,UAPnBH,EADD,OAcd,SAAC,KAAD,MAGL,C,8LCpDDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAM9B,GAAN,uFACVmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAyC,CAC1DsB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDASftB,EAAY,mCAAG,WAAMJ,GAAN,uFACPmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAAiD,CAClEsB,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAK9B,MANS,2CAAH,sDASZmC,EAAe,mCAAG,WAAM/B,GAAN,uFACVmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAAiD,CAClEsB,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,sDC/CrB,IAAMX,EAAe,iC","sources":["components/Cast/Cast.jsx","services/apiService.jsx","services/constants.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { getMovieCast } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../img/placeholder.jpg';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCast = async () => {\n      try {\n        const movieCast = await getMovieCast(id);\n        setCast(movieCast);\n      } catch (error) {\n        console.error(error);\n        toast.error(`${error.message}! Please try again! :(`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  return (\n    <>\n      <h2>Cast</h2>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {cast.map(({ order, profile_path, name, character }) => (\n            <li key={order}>\n              <img\n                src={profile_path ? BASE_IMG_URL + profile_path : placeholder}\n                alt={name}\n              />\n              <p>\n                {name}\n                {character && <span>as {character}</span>}\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '3bff356dabf2463bd3474fa7d5296b16';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","fetchCast","getMovieCast","movieCast","console","error","toast","message","map","order","profile_path","name","character","src","BASE_IMG_URL","placeholder","alt","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}