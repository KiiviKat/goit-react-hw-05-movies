{"version":3,"file":"static/js/257.00679447.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/apiService.jsx","services/constants.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBackBtn = styled.button`\n  display: inline-block;\n  margin-bottom: 16px;\n  cursor: pointer;\n  background-color: white;\n  border-color: #fc0373;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 8px 16px;\n\n  &:hover,\n  &:focus {\n    background-color: #fc0373;\n    color: white;\n  }\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const DetailsText = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 16px;\n`;\n\nexport const Highlight = styled.span`\n  font-weight: 500;\n`;\n\nexport const Rating = styled.span`\n  background-color: #fc0373;\n  color: white;\n  height: 18px;\n  padding: 3px 6px;\n  border-radius: 10px;\n`;\n\nexport const DetailsButtons = styled.div`\n  display: flex;\n  gap: 25px;\n  justify-content: center;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 2px solid #fc0373;\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: white;\n    background-color: #fc0373;\n  }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { getMovieDetails } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../img/placeholder.jpg';\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Heading } from 'components/App.styled';\nimport {\n  GoBackBtn,\n  Details,\n  DetailsText,\n  Highlight,\n  Rating,\n  DetailsButtons,\n  Link,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchDetails = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setDetails(movieDetails);\n      } catch (error) {\n        toast.error(`${error.message}! Please try again! :(`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [id]);\n\n  if (!details) {\n    return null;\n  }\n\n  const {\n    title,\n    poster_path,\n    overview,\n    vote_average,\n    vote_count,\n    release_date,\n    status,\n    runtime,\n  } = details;\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Heading>{title}</Heading>\n          <GoBackBtn type=\"button\" onClick={handleGoBack}>\n            Go back\n          </GoBackBtn>\n          <Details>\n            <img\n              src={poster_path ? BASE_IMG_URL + poster_path : placeholder}\n              alt={title}\n            />\n\n            <div>\n              <ul>\n                <li>\n                  <DetailsText>\n                    <Highlight>Overview:</Highlight> {overview}\n                  </DetailsText>\n                </li>\n                <li>\n                  <DetailsText>\n                    <Highlight>Status:</Highlight> {status}\n                  </DetailsText>\n                  <DetailsText>\n                    <Highlight>Release date:</Highlight>{' '}\n                    {new Date(release_date).toLocaleString().slice(0, 10)}\n                  </DetailsText>\n                  <DetailsText>\n                    <Highlight>Runtime:</Highlight> {runtime} minutes\n                  </DetailsText>\n                </li>\n                <li>\n                  <DetailsText>\n                    <Highlight>Rating:</Highlight>{' '}\n                    <Rating>{vote_average}</Rating> based on {vote_count} votes\n                  </DetailsText>\n                </li>\n              </ul>\n\n              <DetailsButtons>\n                <Link to=\"cast\" state={{ from: location.state.from }}>\n                  Cast\n                </Link>\n                <Link to=\"reviews\" state={{ from: location.state.from }}>\n                  Reviews\n                </Link>\n              </DetailsButtons>\n            </div>\n          </Details>\n        </>\n      )}\n      <Outlet />\n      <Toaster />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '3bff356dabf2463bd3474fa7d5296b16';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["GoBackBtn","styled","Details","DetailsText","Highlight","Rating","DetailsButtons","Link","NavLink","useState","details","setDetails","isLoading","setIsLoading","id","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchDetails","getMovieDetails","movieDetails","toast","message","title","poster_path","overview","vote_average","vote_count","release_date","status","runtime","Loader","type","onClick","state","from","src","BASE_IMG_URL","placeholder","alt","Date","toLocaleString","slice","to","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}